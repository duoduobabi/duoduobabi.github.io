<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>repo命令</title>
    <link href="/2022/03/24/repo%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/03/24/repo%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="1-repo-init"><a href="#1-repo-init" class="headerlink" title="1 repo init"></a>1 repo init</h1><p>repo init -u URL 在当前目录安装仓库，会在当前目录创建一个.repo目录。<br>-u 参数指定一个URL，从这个URL中取得仓库的manifest文件<br>-b 指定分支</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">repo init -u https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/git/</span>AOSP<span class="hljs-regexp">/platform/m</span>anifest -b android-<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>_r2<br></code></pre></td></tr></table></figure><h1 id="2-repo-sync"><a href="#2-repo-sync" class="headerlink" title="2 repo sync"></a>2 repo sync</h1><p>同步代码<br>-l only update working tree, don’t fetch<br>-c fetch only current branch from server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">repo <span class="hljs-built_in">sync</span> -l<br></code></pre></td></tr></table></figure><h1 id="3-repo-start"><a href="#3-repo-start" class="headerlink" title="3 repo start"></a>3 repo start</h1><p>创建一个分支</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">repo <span class="hljs-built_in">start</span> cuiyang <span class="hljs-comment">--all</span><br></code></pre></td></tr></table></figure><h1 id="4-repo-abandon"><a href="#4-repo-abandon" class="headerlink" title="4 repo abandon"></a>4 repo abandon</h1><p>删除一个分支</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">repo abandon cuiyang</span><br></code></pre></td></tr></table></figure><h1 id="5-repo-status"><a href="#5-repo-status" class="headerlink" title="5 repo status"></a>5 repo status</h1><p>显示project中每个仓库状态</p><h1 id="6-repo-checkout"><a href="#6-repo-checkout" class="headerlink" title="6 repo checkout"></a>6 repo checkout</h1><p>切换分支</p><h1 id="7-repo-info"><a href="#7-repo-info" class="headerlink" title="7 repo info"></a>7 repo info</h1><p>project信息</p><h1 id="8-repo-list"><a href="#8-repo-list" class="headerlink" title="8 repo list"></a>8 repo list</h1><p>project列表</p><h1 id="9-repo-branch-es"><a href="#9-repo-branch-es" class="headerlink" title="9 repo branch(es)"></a>9 repo branch(es)</h1><p>查看所有分支</p><h1 id="10-repo-diff"><a href="#10-repo-diff" class="headerlink" title="10 repo diff"></a>10 repo diff</h1><p>查看修改</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima"># 生成一个patch<br>repo <span class="hljs-built_in">diff</span> &gt; update.<span class="hljs-built_in">diff</span><br></code></pre></td></tr></table></figure><p>应用patch</p><blockquote><p>vi ~&#x2F;bin&#x2F;repo-patch</p><p>chmod u+x ~&#x2F;bin&#x2F;repo-patch</p><p>repo-patch update.diff</p></blockquote><p>ubuntu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Script to patch up diff reated by `repo diff`</span><br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ] || [ ! -e <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usages: <span class="hljs-variable">$0</span> &amp;lt;repo_diff_file&amp;gt;&quot;</span>;<br>    <span class="hljs-built_in">exit</span> 0;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">rm</span> -fr _tmp_splits*<br><span class="hljs-built_in">cat</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">csplit</span> -qf <span class="hljs-string">&#x27;&#x27;</span> -b <span class="hljs-string">&quot;_tmp_splits.%d.diff&quot;</span> - <span class="hljs-string">&#x27;/^project.*\/$/&#x27;</span> <span class="hljs-string">&#x27;&#123;*&#125;&#x27;</span><br><br>working_dir=`<span class="hljs-built_in">pwd</span>`<br><br><span class="hljs-keyword">for</span> proj_diff <span class="hljs-keyword">in</span> `<span class="hljs-built_in">ls</span> _tmp_splits.*.diff`<br><span class="hljs-keyword">do</span><br>    chg_dir=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$proj_diff</span> | grep <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 2`<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;FILE: <span class="hljs-variable">$proj_diff</span> <span class="hljs-variable">$chg_dir</span>&quot;</span><br>    <span class="hljs-keyword">if</span> [ -e <span class="hljs-variable">$chg_dir</span> ]; <span class="hljs-keyword">then</span><br>        ( <span class="hljs-built_in">cd</span> <span class="hljs-variable">$chg_dir</span>; \<br>            <span class="hljs-built_in">cat</span> <span class="hljs-variable">$working_dir</span>/<span class="hljs-variable">$proj_diff</span> | grep -v <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | patch -Np1;);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$0</span>: Project directory <span class="hljs-variable">$chg_dir</span> don&#x27;t exists.&quot;</span>;<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">rm</span> -fr _tmp_splits*<br></code></pre></td></tr></table></figure><p>mac</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Script to patch up diff reated by `repo diff`</span><br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ] || [ ! -e <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usages: <span class="hljs-variable">$0</span> &amp;lt;repo_diff_file&amp;gt;&quot;</span>;<br>    <span class="hljs-built_in">exit</span> 0;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">rm</span> -fr _tmp_splits*<br><span class="hljs-built_in">csplit</span> -f <span class="hljs-string">&#x27;_tmp_splits.&#x27;</span> <span class="hljs-variable">$1</span> <span class="hljs-string">&#x27;/^project.*\/$/&#x27;</span> <span class="hljs-string">&#x27;&#123;1&#125;&#x27;</span><br><br>working_dir=`<span class="hljs-built_in">pwd</span>`<br><br><span class="hljs-keyword">for</span> proj_diff <span class="hljs-keyword">in</span> `<span class="hljs-built_in">ls</span> _tmp_splits.*`<br><span class="hljs-keyword">do</span><br>    chg_dir=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$proj_diff</span> | grep <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 2`<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;FILE: <span class="hljs-variable">$proj_diff</span> <span class="hljs-variable">$chg_dir</span>&quot;</span><br>    <span class="hljs-keyword">if</span> [ -e <span class="hljs-variable">$chg_dir</span> ]; <span class="hljs-keyword">then</span><br>        ( <span class="hljs-built_in">cd</span> <span class="hljs-variable">$chg_dir</span>; \<br>            <span class="hljs-built_in">cat</span> <span class="hljs-variable">$working_dir</span>/<span class="hljs-variable">$proj_diff</span> | grep -v <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | patch -Np1;);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$0</span>: Project directory <span class="hljs-variable">$chg_dir</span> don&#x27;t exists.&quot;</span>;<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">rm</span> -fr _tmp_splits*<br></code></pre></td></tr></table></figure><h1 id="11-repo-forall"><a href="#11-repo-forall" class="headerlink" title="11 repo forall"></a>11 repo forall</h1><p>-c 遍历所有的git仓库，并在每个仓库执行-c所指定的命令<br>-r 对指定仓库执行命令</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-meta"># 切换分支</span><br><span class="hljs-title">repo</span> <span class="hljs-keyword">forall</span> -c git checkout cuiyang<br><span class="hljs-meta"># 创建分支</span><br><span class="hljs-title">repo</span> <span class="hljs-keyword">forall</span> -c git branch cuiyang<br><span class="hljs-meta"># 删除分支</span><br><span class="hljs-title">repo</span> <span class="hljs-keyword">forall</span> -c git branch -d cuiyang<br><span class="hljs-meta"># 回退所有代码</span><br><span class="hljs-title">repo</span> <span class="hljs-keyword">forall</span> -c git reset <span class="hljs-comment">--hard HEAD</span><br><span class="hljs-meta"># 对指定仓库执行命令</span><br><span class="hljs-title">repo</span> <span class="hljs-keyword">forall</span> -r art -c git reset <span class="hljs-comment">--hard HEAD</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Android反调试</title>
    <link href="/2022/03/23/Android%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
    <url>/2022/03/23/Android%E5%8F%8D%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="1-x2F-proc-x2F-pid-x2F-status"><a href="#1-x2F-proc-x2F-pid-x2F-status" class="headerlink" title="1 &#x2F;proc&#x2F;$pid&#x2F;status"></a>1 &#x2F;proc&#x2F;$pid&#x2F;status</h1><p>读取&#x2F;proc&#x2F;$pid&#x2F;status、&#x2F;proc&#x2F;$pid&#x2F;task&#x2F;$pid&#x2F;status文件检测被调试</p><figure class="highlight avrasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs avrasm">...<br><span class="hljs-meta"># 当State为t (tracing stop)或者T (stopped)的时候，表示正被调试追踪</span><br><span class="hljs-symbol">State:</span>t (tracing stop)<br>...<br><span class="hljs-meta"># 进程id</span><br><span class="hljs-symbol">Pid:</span><span class="hljs-number">17775</span><br><span class="hljs-meta"># 父进程id zygote zygote64</span><br><span class="hljs-symbol">PPid:</span><span class="hljs-number">833</span><br><span class="hljs-meta"># TracerPid 调试该进程的进程的id</span><br><span class="hljs-symbol">TracerPid:</span><span class="hljs-number">14616</span><br>...<br></code></pre></td></tr></table></figure><h1 id="2-x2F-proc-x2F-pid-x2F-stat"><a href="#2-x2F-proc-x2F-pid-x2F-stat" class="headerlink" title="2 &#x2F;proc&#x2F;$pid&#x2F;stat"></a>2 &#x2F;proc&#x2F;$pid&#x2F;stat</h1><p>读取&#x2F;proc&#x2F;$pid&#x2F;stat、&#x2F;proc&#x2F;$pid&#x2F;task&#x2F;$pid&#x2F;stat文件检测被调试。进程被调试状态下内核会向该文件中的第三个字段写入t标识。</p><blockquote><p>17775 (com.monster) t 833 833 0 0 -1 1077952832 20822 2 0 0 57 6 0 0 10 -10 16 0 9159002 5170302976 21040 18446744073709551615 379861696512 379861721120 549519790464 0 0 0 4612 1 1073775864 0 0 0 17 5 0 0 0 0 0 379861725184 379861726592 380181569536 549519792369 549519792468 549519792468 549519794142 0</p></blockquote><h1 id="3-x2F-proc-x2F-pid-x2F-wchan"><a href="#3-x2F-proc-x2F-pid-x2F-wchan" class="headerlink" title="3 &#x2F;proc&#x2F;$pid&#x2F;wchan"></a>3 &#x2F;proc&#x2F;$pid&#x2F;wchan</h1><p>读取&#x2F;proc&#x2F;$pid&#x2F;wchan、&#x2F;proc&#x2F;$pid&#x2F;task&#x2F;$pid&#x2F;wchan文件检测被调试。wchan文件内容表示当进程sleep时kernel当前运行的函数。若进程被调试，内核会往该文件中写入ptrace_stop信息。</p><blockquote><p>ptrace_stop</p></blockquote><h1 id="4-修改内核代码绕过反调试"><a href="#4-修改内核代码绕过反调试" class="headerlink" title="4 修改内核代码绕过反调试"></a>4 修改内核代码绕过反调试</h1><p>内核版本 android-msm-crosshatch-4.9-android10，创建分支修改内核代码</p><blockquote><p>repo start cuiyang –all</p></blockquote><p>修改fs&#x2F;proc&#x2F;array.c</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs xl">static const char * const task_state_array[] = &#123;<br><span class="hljs-string">&quot;R (running)&quot;</span>,<span class="hljs-comment">/*   0 */</span><br><span class="hljs-string">&quot;S (sleeping)&quot;</span>,<span class="hljs-comment">/*   1 */</span><br><span class="hljs-string">&quot;D (disk sleep)&quot;</span>,<span class="hljs-comment">/*   2 */</span><br><span class="hljs-comment">// cuiyang</span><br><span class="hljs-string">&quot;S (sleeping)&quot;</span>,<span class="hljs-comment">/*   4 */</span><br><span class="hljs-string">&quot;S (sleeping)&quot;</span>,<span class="hljs-comment">/*   8 */</span><br><span class="hljs-comment">//&quot;T (stopped)&quot;,/*   4 */</span><br><span class="hljs-comment">//&quot;t (tracing stop)&quot;,/*   8 */</span><br><span class="hljs-comment">// * cuiyang</span><br><span class="hljs-string">&quot;X (dead)&quot;</span>,<span class="hljs-comment">/*  16 */</span><br><span class="hljs-string">&quot;Z (zombie)&quot;</span>,<span class="hljs-comment">/*  32 */</span><br>&#125;;<br><br>...<br><br>static inline void task_state(struct seq_file *m, struct pid_namespace *ns,<br>struct pid *pid, struct task_struct *p)<br>&#123;<br>struct user_namespace *user_ns = seq_user_ns(m);<br>struct group_info *group_info;<br>int g, umask;<br>struct task_struct *tracer;<br>const struct cred *cred;<br>pid_t ppid, tpid = <span class="hljs-number">0</span>, tgid, ngid;<br>unsigned int max_fds = <span class="hljs-number">0</span>;<br><br>rcu_read_lock();<br>ppid = pid_alive(p) ?<br><span class="hljs-function"><span class="hljs-title">task_tgid_nr_ns</span>(rcu_dereference(p-&gt;</span>real_parent), ns) : <span class="hljs-number">0</span>;<br><br>tracer = ptrace_parent(p);<br><span class="hljs-keyword">if</span> (tracer)<br>tpid = task_pid_nr_ns(tracer, ns);<br><br><span class="hljs-comment">// cuiyang</span><br>tpid = <span class="hljs-number">0</span>;<br><span class="hljs-comment">// * cuiyang</span><br><br>tgid = task_tgid_nr_ns(p, ns);<br>ngid = task_numa_group_id(p);<br>cred = get_task_cred(p);<br><br>umask = get_task_umask(p);<br><span class="hljs-keyword">if</span> (umask &gt;= <span class="hljs-number">0</span>)<br>seq_printf(m, <span class="hljs-string">&quot;Umask:\t%#04o\n&quot;</span>, umask);<br><br>task_lock(p);<br><span class="hljs-function"><span class="hljs-title">if</span> (p-&gt;</span>files)<br><span class="hljs-function"><span class="hljs-title">max_fds</span> = files_fdtable(p-&gt;</span><span class="hljs-function"><span class="hljs-title">files</span>)-&gt;</span>max_fds;<br>task_unlock(p);<br>rcu_read_unlock();<br><br>seq_printf(m, <span class="hljs-string">&quot;State:\t%s&quot;</span>, get_task_state(p));<br><br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nTgid:\t&quot;</span>, tgid);<br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nNgid:\t&quot;</span>, ngid);<br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nPid:\t&quot;</span>, pid_nr_ns(pid, ns));<br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nPPid:\t&quot;</span>, ppid);<br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nTracerPid:\t&quot;</span>, tpid);<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\nUid:\t&quot;, from_kuid_munged(user_ns, cred-&gt;</span>uid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kuid_munged(user_ns, cred-&gt;</span>euid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kuid_munged(user_ns, cred-&gt;</span>suid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kuid_munged(user_ns, cred-&gt;</span>fsuid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\nGid:\t&quot;, from_kgid_munged(user_ns, cred-&gt;</span>gid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kgid_munged(user_ns, cred-&gt;</span>egid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kgid_munged(user_ns, cred-&gt;</span>sgid));<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, from_kgid_munged(user_ns, cred-&gt;</span>fsgid));<br>seq_put_decimal_ull(m, <span class="hljs-string">&quot;\nFDSize:\t&quot;</span>, max_fds);<br><br>seq_puts(m, <span class="hljs-string">&quot;\nGroups:\t&quot;</span>);<br><span class="hljs-function"><span class="hljs-title">group_info</span> = cred-&gt;</span>group_info;<br><span class="hljs-function"><span class="hljs-title">for</span> (g = 0; g &lt; group_info-&gt;</span>ngroups; g++)<br>seq_put_decimal_ull(m, g ? <span class="hljs-string">&quot; &quot;</span> : <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-function"><span class="hljs-title">from_kgid_munged</span>(user_ns, group_info-&gt;</span>gid[g]));<br>put_cred(cred);<br><span class="hljs-comment">/* Trailing space shouldn&#x27;t have been added in the first place. */</span><br>seq_putc(m, <span class="hljs-string">&#x27; &#x27;</span>);<br><br>#ifdef CONFIG_PID_NS<br>seq_puts(m, <span class="hljs-string">&quot;\nNStgid:&quot;</span>);<br><span class="hljs-function"><span class="hljs-title">for</span> (g = ns-&gt;</span><span class="hljs-function"><span class="hljs-title">level</span>; g &lt;= pid-&gt;</span>level; g++)<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, task_tgid_nr_ns(p, pid-&gt;</span>numbers[g].ns));<br>seq_puts(m, <span class="hljs-string">&quot;\nNSpid:&quot;</span>);<br><span class="hljs-function"><span class="hljs-title">for</span> (g = ns-&gt;</span><span class="hljs-function"><span class="hljs-title">level</span>; g &lt;= pid-&gt;</span>level; g++)<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, task_pid_nr_ns(p, pid-&gt;</span>numbers[g].ns));<br>seq_puts(m, <span class="hljs-string">&quot;\nNSpgid:&quot;</span>);<br><span class="hljs-function"><span class="hljs-title">for</span> (g = ns-&gt;</span><span class="hljs-function"><span class="hljs-title">level</span>; g &lt;= pid-&gt;</span>level; g++)<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, task_pgrp_nr_ns(p, pid-&gt;</span>numbers[g].ns));<br>seq_puts(m, <span class="hljs-string">&quot;\nNSsid:&quot;</span>);<br><span class="hljs-function"><span class="hljs-title">for</span> (g = ns-&gt;</span><span class="hljs-function"><span class="hljs-title">level</span>; g &lt;= pid-&gt;</span>level; g++)<br><span class="hljs-function"><span class="hljs-title">seq_put_decimal_ull</span>(m, &quot;\t&quot;, task_session_nr_ns(p, pid-&gt;</span>numbers[g].ns));<br>#endif<br>seq_putc(m, <span class="hljs-string">&#x27;\n&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>修改fs&#x2F;proc&#x2F;base.c</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title">proc_pid_wchan</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> seq_file *m, <span class="hljs-keyword">struct</span> pid_namespace *ns,</span></span><br><span class="hljs-params"><span class="hljs-function">  <span class="hljs-keyword">struct</span> pid *pid, <span class="hljs-keyword">struct</span> task_struct *task)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> wchan;<br><span class="hljs-type">char</span> symname[KSYM_NAME_LEN];<br><br>wchan = <span class="hljs-built_in">get_wchan</span>(task);<br><br><span class="hljs-keyword">if</span> (wchan &amp;&amp; <span class="hljs-built_in">ptrace_may_access</span>(task, PTRACE_MODE_READ_FSCREDS)<br>&amp;&amp; !<span class="hljs-built_in">lookup_symbol_name</span>(wchan, symname))<br><span class="hljs-comment">// cuiyang</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">strstr</span>(symname,<span class="hljs-string">&quot;trace&quot;</span>))<br><span class="hljs-built_in">seq_printf</span>(m, <span class="hljs-string">&quot;%s&quot;</span>,<span class="hljs-string">&quot;sys_epoll_wait&quot;</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">seq_printf</span>(m, <span class="hljs-string">&quot;%s&quot;</span>, symname);<br><span class="hljs-comment">//seq_printf(m, &quot;%s&quot;, symname);</span><br><span class="hljs-comment">// * cuiyang</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">seq_putc</span>(m, <span class="hljs-string">&#x27;0&#x27;</span>);<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu编译Android内核</title>
    <link href="/2022/03/22/Ubuntu%E7%BC%96%E8%AF%91Android%E5%86%85%E6%A0%B8/"/>
    <url>/2022/03/22/Ubuntu%E7%BC%96%E8%AF%91Android%E5%86%85%E6%A0%B8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考：<br><a href="https://source.android.com/setup/build/building-kernels">https://source.android.com/setup/build/building-kernels</a><br><a href="https://source.android.google.cn/setup/build/building-kernels">https://source.android.google.cn/setup/build/building-kernels</a></p></blockquote><h1 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1 搭建环境"></a>1 搭建环境</h1><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 使用multipass创建虚拟机</span><br>multipass launch --name aosp -c <span class="hljs-number">8</span> -m <span class="hljs-number">16</span>G -d <span class="hljs-number">300</span>G <span class="hljs-number">18.04</span><br>multipass shell aosp<br><span class="hljs-comment"># 挂载一个本地目录到虚拟机中，注意如果源码在本地目录，挂载到虚拟机中编译会报错。但是编译可以输出到挂载目录中</span><br>multipass mount <span class="hljs-regexp">/Volumes/m</span>ac aosp:<span class="hljs-regexp">/home/m</span>ac<br><br><span class="hljs-comment"># 安装官方文档安装所需的软件</span><br>sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig<br><span class="hljs-comment"># 编译会报&#x27;openssl/bio.h&#x27; file not found错误，提前安装libssl-dev</span><br>sudo apt-get install libssl-dev<br><br><span class="hljs-comment"># 安装repo</span><br>mkdir ~/bin<br>curl https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/git/gi</span>t-repo -o ~<span class="hljs-regexp">/bin/</span>repo<br>chmod +x ~<span class="hljs-regexp">/bin/</span>repo<br><br><span class="hljs-comment"># 配置环境变量</span><br>vi ~/.bashrc<br>export REPO_URL=<span class="hljs-string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="2-下载Android内核源码"><a href="#2-下载Android内核源码" class="headerlink" title="2 下载Android内核源码"></a>2 下载Android内核源码</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir android-kernel &amp;&amp; cd android-kernel<br>repo init --depth <span class="hljs-number">1</span> -u https:<span class="hljs-regexp">//</span>aosp.tuna.tsinghua.edu.cn<span class="hljs-regexp">/kernel/m</span>anifest -b android-msm-crosshatch-<span class="hljs-number">4.9</span>-android11<br>repo sync<br></code></pre></td></tr></table></figure><h1 id="3-编译"><a href="#3-编译" class="headerlink" title="3 编译"></a>3 编译</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">build/build.sh<br><span class="hljs-comment"># 默认输出目录为out，如需修改以下命令</span><br>OUT_DIR=<span class="hljs-regexp">/home/m</span>ac<span class="hljs-regexp">/out build/</span>build.sh<br><br><span class="hljs-comment"># 修改环境变量</span><br>export TARGET_PREBUILT_KERNEL=<span class="hljs-regexp">/Volumes/m</span>ac<span class="hljs-regexp">/out/</span>dist/Image.lz4<br><span class="hljs-comment"># 重新编译aosp源码，我aosp是在mac编译的，虚拟机编译比较慢</span><br>source build/envsetup.sh<br>lunch aosp_blueline-userdebug<br><span class="hljs-comment"># 完整编译aosp</span><br>m<br><span class="hljs-comment"># 单独编译boot.img</span><br>make bootimage<br></code></pre></td></tr></table></figure><h1 id="4-刷内核到设备"><a href="#4-刷内核到设备" class="headerlink" title="4 刷内核到设备"></a>4 刷内核到设备</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 先拷贝*.ko文件到手机中，否则刷内核之后屏幕失灵</span><br>adb root<br>adb remount -R<br>adb push <span class="hljs-regexp">/Volumes/m</span>ac<span class="hljs-regexp">/out/</span>dist<span class="hljs-regexp">/*.ko /</span>vendor<span class="hljs-regexp">/lib/m</span>odules<br><br><span class="hljs-comment"># 进入bootloader模式</span><br>adb reboot fastboot<br><span class="hljs-comment"># 从新内核启动，但不烧录，重启会失效</span><br>fastboot boot boot.img<br><span class="hljs-comment"># 烧录新内核</span><br>fastboot flash boot boot.img<br><span class="hljs-comment"># 如果修改了设备树，还需要烧录dtbo.img</span><br>fastboot flash dtbo dtbo.img<br></code></pre></td></tr></table></figure><h1 id="5-遇到的问题"><a href="#5-遇到的问题" class="headerlink" title="5 遇到的问题"></a>5 遇到的问题</h1><h2 id="5-1-‘openssl-x2F-bio-h’-file-not-found"><a href="#5-1-‘openssl-x2F-bio-h’-file-not-found" class="headerlink" title="5.1 ‘openssl&#x2F;bio.h’ file not found"></a>5.1 ‘openssl&#x2F;bio.h’ file not found</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">sudo apt-<span class="hljs-built_in">get</span> install libssl-<span class="hljs-built_in">dev</span><br></code></pre></td></tr></table></figure><h2 id="5-2-bc-command-not-found"><a href="#5-2-bc-command-not-found" class="headerlink" title="5.2 bc: command not found"></a>5.2 bc: command not found</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install bc<br></code></pre></td></tr></table></figure><h2 id="5-3-soong-zip-command-not-found"><a href="#5-3-soong-zip-command-not-found" class="headerlink" title="5.3 soong_zip: command not found"></a>5.3 soong_zip: command not found</h2><p>soong_zip命令是aosp源码编译产生，目录地址：<br>&#x2F;home&#x2F;ubuntu&#x2F;aosp&#x2F;out&#x2F;soong&#x2F;host&#x2F;linux-x86&#x2F;bin<br>编译aosp源码会自动添加到环境变量PATH，或者复制soong_zip到~&#x2F;bin目录下。我的aosp源码是mac编译，所以需要ubuntu单独编译soong</p><h2 id="5-4-刷内核之后，屏幕失灵"><a href="#5-4-刷内核之后，屏幕失灵" class="headerlink" title="5.4 刷内核之后，屏幕失灵"></a>5.4 刷内核之后，屏幕失灵</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 先拷贝*.ko文件到手机中，否则刷内核之后屏幕失灵</span><br>adb root<br>adb remount -R<br>adb push <span class="hljs-regexp">/Volumes/m</span>ac<span class="hljs-regexp">/out/</span>dist<span class="hljs-regexp">/*.ko /</span>vendor<span class="hljs-regexp">/lib/m</span>odules<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>macOS Monterey编译Android10</title>
    <link href="/2022/03/08/macOS-Monterey%E7%BC%96%E8%AF%91Android10/"/>
    <url>/2022/03/08/macOS-Monterey%E7%BC%96%E8%AF%91Android10/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考：<br><a href="https://source.android.com/setup/start">https://source.android.com/setup/start</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/</a></p></blockquote><font color="red" size="4">官方提示：自 2021 年 6 月 22 日起，我们不再支持在 MacOS 上进行平台开发。所以最新版的aosp源码不要在mac上编译。</font><h1 id="1-下载repo工具"><a href="#1-下载repo工具" class="headerlink" title="1 下载repo工具"></a>1 下载repo工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/bin<br>PATH=~/bin:<span class="hljs-variable">$PATH</span><br>curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo<br><span class="hljs-built_in">chmod</span> a+x ~/bin/repo<br><br>vi .bash_profile<br><span class="hljs-comment"># repo的运行过程中会尝试访问官方的git源更新自己，使用tuna的镜像源进行更新</span><br><span class="hljs-built_in">export</span> REPO_URL=<span class="hljs-string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/&#x27;</span><br><span class="hljs-built_in">source</span> .bash_profile<br></code></pre></td></tr></table></figure><h1 id="2-下载源码"><a href="#2-下载源码" class="headerlink" title="2 下载源码"></a>2 下载源码</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir aosp<br>cd aosp<br><span class="hljs-comment"># https://android.googlesource.com/platform/manifest</span><br>repo init -u https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/git/</span>AOSP<span class="hljs-regexp">/platform/m</span>anifest -b android-<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>_r2<br>repo sync<br></code></pre></td></tr></table></figure><h1 id="3-下载驱动"><a href="#3-下载驱动" class="headerlink" title="3 下载驱动"></a>3 下载驱动</h1><p><a href="https://developers.google.com/android/drivers">https://developers.google.com/android/drivers</a><br><a href="https://developers.google.com/android/drivers#bluelineqp1a.190711.020">https://developers.google.com/android/drivers#bluelineqp1a.190711.020</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将下载好的驱动放到android源码目录</span><br>tar zxvf google_devices-blueline-qp1a.190711.020-1e75681a.tgz<br>tar zxvf qcom-blueline-qp1a.190711.020-fa3a35b0.tgz<br>./extract-google_devices-blueline.sh<br>./extract-qcom-blueline.sh<br><span class="hljs-comment"># 解压之后会在源码目录创建vendor文件夹</span><br></code></pre></td></tr></table></figure><h1 id="4-构建源码"><a href="#4-构建源码" class="headerlink" title="4 构建源码"></a>4 构建源码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> build/envsetup.sh<br>lunch aosp_blueline-userdebug<br>m<br></code></pre></td></tr></table></figure><h1 id="5-刷机"><a href="#5-刷机" class="headerlink" title="5 刷机"></a>5 刷机</h1><p>参考：<a href="https://source.android.com/setup/build/running">https://source.android.com/setup/build/running</a></p><p>直接用编译输出的文件刷机</p><p>ANDROID_PRODUCT_OUT&#x3D;&#x2F;Volumes&#x2F;mac&#x2F;Android&#x2F;aosp&#x2F;out&#x2F;target&#x2F;product&#x2F;blueline</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">已解锁引导加载程序</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ANDROID_PRODUCT_OUT</span></span><br>adb reboot bootloader<br>fastboot flashall -w<br></code></pre></td></tr></table></figure><p>生成刷机文件并刷机</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">zip images.zip out<span class="hljs-regexp">/target/</span>product<span class="hljs-regexp">/blueline/</span>*.img out<span class="hljs-regexp">/target/</span>product<span class="hljs-regexp">/blueline/</span>android-info.txt<br>fastboot -w update images.zip <br><br>zip -j images.zip out<span class="hljs-regexp">/target/</span>product<span class="hljs-regexp">/blueline/</span>*.img out<span class="hljs-regexp">/target/</span>product<span class="hljs-regexp">/blueline/</span>android-info.txt<br></code></pre></td></tr></table></figure><h1 id="6-遇到的问题："><a href="#6-遇到的问题：" class="headerlink" title="6 遇到的问题："></a>6 遇到的问题：</h1><h2 id="6-1-Could-not-find-a-supported-mac-sdk"><a href="#6-1-Could-not-find-a-supported-mac-sdk" class="headerlink" title="6.1 Could not find a supported mac sdk"></a>6.1 Could not find a supported mac sdk</h2><p>网上有很多解决方法是修改&#x2F;build&#x2F;soong&#x2F;cc&#x2F;config&#x2F;x86_darwin_host.go文件，添加sdk版本号：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">darwinSupportedSdkVersions = []string&#123;<br>        <span class="hljs-string">&quot;10.10&quot;</span>,<br>        <span class="hljs-string">&quot;10.11&quot;</span>,<br>        <span class="hljs-string">&quot;10.12&quot;</span>,<br>        <span class="hljs-string">&quot;10.13&quot;</span>,<br>        <span class="hljs-string">&quot;10.14&quot;</span>,<br>        <span class="hljs-string">&quot;12.1&quot;</span>, <span class="hljs-regexp">//</span> xcrun --show-sdk-version<br>    &#125;<br></code></pre></td></tr></table></figure><p>最新的macOS版本的xocde sdk版本已经是12.x，直接修改x86_darwin_host.go文件会导致后续编译有各种各样的错误，比如<strong>PAGE_SIZE</strong>未定义。</p><p>还有一种方法是去github下载支持版本的sdk，解压到以下目录：</p><blockquote><p>&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs</p></blockquote><p>下载地址：<a href="https://github.com/phracker/MacOSX-SDKs/releases">https://github.com/phracker/MacOSX-SDKs/releases</a></p><p>编译依然报错<strong>Could not find a supported mac sdk</strong>，通过x86_darwin_host.go源码可以看出是通过<strong>xcrun –sdk macosx10.11 –show-sdk-path</strong>命令来查找sdk路径的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br>    ...<br>    pctx.VariableFunc(<span class="hljs-string">&quot;macSdkRoot&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(ctx android.PackageVarContext)</span></span> <span class="hljs-type">string</span> &#123;<br>        <span class="hljs-keyword">return</span> xcrunSdk(ctx, <span class="hljs-string">&quot;--show-sdk-path&quot;</span>)<br>    &#125;)<br>    ...<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">xcrunSdk</span><span class="hljs-params">(ctx android.PackageVarContext, arg <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>    ...<br><br>    <span class="hljs-keyword">for</span> _, sdk := <span class="hljs-keyword">range</span> darwinSupportedSdkVersions &#123;<br>        bytes, err := exec.Command(xcrun, <span class="hljs-string">&quot;--sdk&quot;</span>, <span class="hljs-string">&quot;macosx&quot;</span>+sdk, arg).Output()<br>        <span class="hljs-keyword">if</span> err == <span class="hljs-literal">nil</span> &#123;<br>            <span class="hljs-keyword">return</span> strings.TrimSpace(<span class="hljs-type">string</span>(bytes))<br>        &#125;<br>    &#125;<br>    ctx.Errorf(<span class="hljs-string">&quot;Could not find a supported mac sdk: %q&quot;</span>, darwinSupportedSdkVersions)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>运行命令xcrun –sdk macosx10.11 –show-sdk-path -n报错如下(<strong>-n参数不使用缓存</strong>)：</p><blockquote><p>2022-03-01 11:05:16.489 xcodebuild[61280:2221681] [MT] DVTSDK: Skipped SDK &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;MacOSX10.11.sdk; its version (10.11) is below required minimum (11.0) for the macosx platform.</p></blockquote><p>xcode支持的最小版本号为11.0，那么我们修改一下支持的最新版本号为10.11，用xcode打开以下文件：<br>&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Info.plist<br>修改MinimumSDKVersion为10.11（如果不能保存，先把Info.plist复制到用户名目录修改之后在覆盖原文件）。</p><p>再次执行<strong>xcrun –sdk macosx10.11 –show-sdk-path -n</strong>，正常输出sdk路径。</p><blockquote><p>&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;MacOSX10.11.sdk</p></blockquote><h2 id="6-2-ninja-build-stopped-subcommand-failed-或者too-many-open-files"><a href="#6-2-ninja-build-stopped-subcommand-failed-或者too-many-open-files" class="headerlink" title="6.2 ninja: build stopped: subcommand failed.或者too many open files"></a>6.2 ninja: build stopped: subcommand failed.或者too many open files</h2><p>文件句柄数不够，需要调高ulimit 里面的-n 的值。ulimit -n 5000即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ulimit</span> -a<br><span class="hljs-built_in">ulimit</span> -n<br><br>vi ~/.bash_profile<br><span class="hljs-built_in">ulimit</span> -n 5000<br><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure><h2 id="6-3-x2F-bin-x2F-bash-line-1-70100-Segmentation-fault-11"><a href="#6-3-x2F-bin-x2F-bash-line-1-70100-Segmentation-fault-11" class="headerlink" title="6.3 &#x2F;bin&#x2F;bash: line 1: 70100 Segmentation fault: 11"></a>6.3 &#x2F;bin&#x2F;bash: line 1: 70100 Segmentation fault: 11</h2><blockquote><p>&#x2F;bin&#x2F;bash: line 1: 70100 Segmentation fault: 11  ( out&#x2F;host&#x2F;darwin-x86&#x2F;bin&#x2F;sepolicy_tests -l out&#x2F;host&#x2F;darwin-x86&#x2F;lib64&#x2F;libsepolwrap.dylib -f out&#x2F;target&#x2F;product&#x2F;blueline&#x2F;obj&#x2F;ETC&#x2F;plat_file_contexts_intermediates&#x2F;plat_file_contexts -f out&#x2F;target&#x2F;product&#x2F;blueline&#x2F;obj&#x2F;ETC&#x2F;vendor_file_contexts_intermediates&#x2F;vendor_file_contexts -p out&#x2F;target&#x2F;product&#x2F;blueline&#x2F;obj&#x2F;ETC&#x2F;sepolicy_intermediates&#x2F;sepolicy )</p></blockquote><p>参考一下提交记录删除 stl: “libc++_static”,<br><a href="https://android.googlesource.com/platform/system/sepolicy/+/1f944107a3341ab593c93bbdf09e22436cc0e3d3">https://android.googlesource.com/platform/system/sepolicy/+/1f944107a3341ab593c93bbdf09e22436cc0e3d3</a></p><h2 id="6-4-macOS-DS-Store-导致打包镜像失败"><a href="#6-4-macOS-DS-Store-导致打包镜像失败" class="headerlink" title="6.4 macOS .DS_Store 导致打包镜像失败"></a>6.4 macOS .DS_Store 导致打包镜像失败</h2><p>编译基本完成，但是最后打包system.img文件时报错，报错内容如下：</p><blockquote><p>set_selinux_xattr: No such file or directory searching for label “&#x2F;.DS_Store”<br>e2fsdroid: No such file or directory while configuring the file system<br>10:00:38 ninja failed with: exit status 1</p></blockquote><p>.DS_Store 文件为macOS中存储文件夹界面展示相关的一些信息，在Finder中查看对应目录后可能会生成。解决方式：删除源码目录中的所有 .DS_Store，可通过如下命令进行统一清理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">find</span> . -name <span class="hljs-string">&quot;.DS_Store&quot;</span>  | xargs -I &#123;&#125; rm &#123;&#125; <br></code></pre></td></tr></table></figure><h2 id="6-5-Rebooting-into-fastboot-FAILED-remote-‘Unsupported-reboot-option-reboot-fastboot’"><a href="#6-5-Rebooting-into-fastboot-FAILED-remote-‘Unsupported-reboot-option-reboot-fastboot’" class="headerlink" title="6.5 Rebooting into fastboot FAILED (remote: ‘Unsupported reboot option reboot-fastboot’)"></a>6.5 Rebooting into fastboot FAILED (remote: ‘Unsupported reboot option reboot-fastboot’)</h2><p>先刷一下官方的10.0.0 (QP1A.190711.020, Sep 2019)镜像<br><a href="https://developers.google.com/android/images">https://developers.google.com/android/images</a><br><a href="https://dl.google.com/dl/android/aosp/blueline-qp1a.190711.020-factory-b5633fdf.zip">https://dl.google.com/dl/android/aosp/blueline-qp1a.190711.020-factory-b5633fdf.zip</a></p><h2 id="6-6-我们构建的aosp选择的是userdebug类型，是具有root权限的。但是在启动frida中会报错："><a href="#6-6-我们构建的aosp选择的是userdebug类型，是具有root权限的。但是在启动frida中会报错：" class="headerlink" title="6.6 我们构建的aosp选择的是userdebug类型，是具有root权限的。但是在启动frida中会报错："></a>6.6 我们构建的aosp选择的是userdebug类型，是具有root权限的。但是在启动frida中会报错：</h2><blockquote><p>Error: invalid address</p></blockquote><p>解决方法：<br>关闭SElinux</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 查看SElinux状态 Enforcing</span><br><span class="hljs-attribute">getenforce</span><br><span class="hljs-comment"># 修改为 Permissive</span><br><span class="hljs-attribute">setenforce</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="6-7-在mac-13-2-1-Ventura编译报错，diff-unrecognized-option-96-–old-line-format-x3D-Removed’"><a href="#6-7-在mac-13-2-1-Ventura编译报错，diff-unrecognized-option-96-–old-line-format-x3D-Removed’" class="headerlink" title="6.7 在mac 13.2.1 Ventura编译报错，diff: unrecognized option &#96;–old-line-format&#x3D;Removed’"></a>6.7 在mac 13.2.1 Ventura编译报错，diff: unrecognized option &#96;–old-line-format&#x3D;Removed’</h2><p>主要原因是升级到Ventura后新的diff命令不支持–old-line-format&#x3D;Removed。</p><p>解决方案：</p><p>用老的diff程序替换新的。在用户目录创建bin文件夹，复制diff到bin文件夹。将~&#x2F;bin添加到环境变量即可。如果找不到老的diff，直接创建一个diff文件，添加执行权限即可。</p><h1 id="7-将源码导入到Android-Studio"><a href="#7-将源码导入到Android-Studio" class="headerlink" title="7 将源码导入到Android Studio"></a>7 将源码导入到Android Studio</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> build/envsetup.sh<br># 编译生成 out<span class="hljs-regexp">/host/</span>darwin-x86<span class="hljs-regexp">/framework/i</span>degen.jar<br>mmm development<span class="hljs-regexp">/tools/i</span>degen/<br># 生成 android.ipr 和 android.iml<br>development<span class="hljs-regexp">/tools/i</span>degen/idegen.sh<br></code></pre></td></tr></table></figure><p>排除不必要的模块，提高加载速度。打开android.iml, 找到excludeFolder属性，我们可以看到默认有一些模块是被排除了，不会被导入的。将下面内容添加到默认excludeFolder标签后面。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/abi&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/art&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/bionic&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/bootable&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/build&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/cts&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/dalvik&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/developers&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/development&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/device&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/docs&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/external&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/hardware&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/libcore&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/libnativehelper&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/ndk&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/out&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/pdk&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/prebuilts&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/sdk&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/system&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/tools&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/kernel&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/vendor&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/platform_testing&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/test&quot;</span>/&gt;<br>&lt;excludeFolder <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;file://<span class="hljs-variable">$MODULE_DIR</span>$/toolchain&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><p>使用Android Studio打开android.ipr文件即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
